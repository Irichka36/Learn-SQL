You work as a data analyst for a FAANG company that tracks employee salaries over time. 
The company wants to understand how the average salary in each department compares to the company's overall average salary each month.

Write a query to compare the average salary of employees in each department to the company's average salary for March 2024. 
Return the comparison result as 'higher', 'lower', or 'same' for each department. Display the department ID, payment month (in MM-YYYY format), and the comparison result.

employee Schema:
column_name	    type	    description
employee_id	    integer	  The unique ID of the employee.
name	          string	  The full name of the employee.
salary	        integer	  The salary of the employee.
department_id	  integer	  The department ID of the employee.
manager_id	    integer	  The manager ID of the employee.

salary Schema:
column_name	    type	    description
salary_id	      integer	  A unique ID for each salary record.
employee_id	    integer	  The unique ID of the employee.
amount	        integer	  The salary of the employee.
payment_date	  datetime	The date and time when the salary was paid to the employee.

WITH avg_salary AS (
SELECT 
  e.department_id
  , TO_CHAR (s.payment_date, 'MM-YYYY') AS payment_month
  , AVG(s.amount) OVER () AS total_avg_salary
  , AVG(s.amount) OVER(PARTITION BY e.department_id) AS dep_avg_salary
FROM salary AS s
JOIN employee AS e ON e.employee_id = s.employee_id
AND TO_CHAR (s.payment_date, 'MM-YYYY') = '03-2024'
)
SELECT
  department_id
  , payment_month
  , CASE 
      WHEN dep_avg_salary > total_avg_salary THEN 'higher'
      WHEN dep_avg_salary < total_avg_salary THEN 'lower'
      ELSE 'same'
      END AS comparison
FROM avg_salary
GROUP BY 1,2,3
ORDER BY 1;
