MEDIUM PART

  QUESTION 1
    /* Show unique birth years from patients and order them by ascending. */

SELECT 
  DISTINCT YEAR(birth_date) AS unique_year
FROM patients
ORDER BY 1 ASC;

  --ANOTHER SOLUTION--
SELECT YEAR(birth_date)
FROM patients
GROUP BY year(birth_date);

_________________________________________________________

  QUESTION 2
    /* Show unique first names from the patients table which only occurs once in the list.
      For example, if two or more people are named 'John' in the first_name column then don't include their name in the output list.
      If only 1 person is named 'Leo' then include them in the output. */

SELECT first_name
FROM patients
GROUP BY 1
HAVING COUNT(first_name) = 1;

    --ANOTHER SOLUTION--
SELECT first_name
FROM (
    SELECT
      first_name,
      count(first_name) AS occurrencies
    FROM patients
    GROUP BY first_name
  )
WHERE occurrencies = 1

_________________________________________________________

  QUESTION 3

    /* Show patient_id and first_name from patients where their first_name start and ends with 's' and is at least 6 characters long. */

SELECT 
	patient_id
  , first_name
FROM patients
WHERE 
	first_name LIKE 'S%s'
	AND LEN(first_name) >= 6;

     --ANOTHER SOLUTION--
SELECT
  patient_id,
  first_name
FROM patients
WHERE first_name LIKE 's____%s';

_________________________________________________________

  QUESTION 4
    /* Show patient_id, first_name, last_name from patients whos diagnosis is 'Dementia'.
      Primary diagnosis is stored in the admissions table. */

  SELECT 
	p.patient_id
    , p.first_name
    , p.last_name
FROM patients p
JOIN admissions a ON p.patient_id = a.patient_id
where a.diagnosis = 'Dementia';

     --ANOTHER SOLUTION--
SELECT
  patient_id
  , first_name
  , last_name
FROM patients
WHERE patient_id IN (
    SELECT patient_id
    FROM admissions
    WHERE diagnosis = 'Dementia'
  );  

_________________________________________________________

  QUESTION 5
    /* Display every patient's first_name.
    Order the list by the length of each name and then by alphabetically. */

SELECT first_name
FROM patients
ORDER BY 
	LEN (first_name) ASC
    , first_name ASC;

_________________________________________________________

  QUESTION 6
    /* Show the total amount of male patients and the total amount of female patients in the patients table.
    Display the two results in the same row. */

SELECT 
	SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) AS male_count
  , SUM(CASE WHEN gender = 'F' THEN 1 ELSE 0 END) AS female_count
FROM patients;

 --ANOTHER SOLUTION--
SELECT 
  SUM(Gender = 'M') AS male_count, 
  SUM(Gender = 'F') AS female_count
FROM patients;

 --ANOTHER SOLUTION--
SELECT 
  (SELECT count(*) FROM patients WHERE gender='M') AS male_count, 
  (SELECT count(*) FROM patients WHERE gender='F') AS female_count;

_________________________________________________________
  
  QUESTION 7
/* Show first and last name, allergies from patients which have allergies to either 'Penicillin' or 'Morphine'. 
  Show results ordered ascending by allergies then by first_name then by last_name. */

SELECT 
	first_name
  , last_name
  , allergies
FROM patients
WHERE 
	allergies = 'Penicillin'
	OR allergies = 'Morphine'
ORDER BY 
	allergies ASC
  , first_name ASC
  , last_name ASC;

--ANOTHER SOLUTION--

SELECT
  first_name
  , last_name
  , allergies
FROM patients
WHERE
  allergies IN ('Penicillin', 'Morphine')
ORDER BY
  allergies
  , first_name
  , last_name;

_________________________________________________________
  
QUESTION 8
/* Show patient_id, diagnosis from admissions. Find patients admitted multiple times for the same diagnosis. */

SELECT 
	patient_id
  , diagnosis
FROM admissions
GROUP BY 
    patient_id, 
    diagnosis
HAVING COUNT (diagnosis) >= 2;

_________________________________________________________
  
QUESTION 9
  /* Show the city and the total number of patients in the city.
  Order from most to least patients and then by city name ascending. */

SELECT 
	city
  , COUNT (*) AS num_patients
FROM patients
GROUP BY city
ORDER BY 
    num_patients DESC
    , city ASC;

_________________________________________________________
  
QUESTION 10
  /* Show first name, last name and role of every person that is either patient or doctor.
    The roles are either "Patient" or "Doctor"

SELECT 
	first_name
  , last_name
  , 'Patient' AS role
FROM patients

UNION ALL

SELECT 
  first_name
  , last_name
  , 'Doctor' AS role
FROM doctors;


_________________________________________________________
  
QUESTION 11

/* Show all allergies ordered by popularity. Remove NULL values from query.

SELECT 
	allergies
	, COUNT (*) AS total_diagnosis
FROM patients
GROUP BY allergies 
HAVING allergies IS NOT NULL
ORDER BY total_diagnosis DESC;

_________________________________________________________
  
QUESTION 12























  
